---
import ResourceCard from '@components/ResourceCard.astro'
import Layout from '@layouts/Layout.astro'
import { getCollection } from 'astro:content'
import { formatDate } from 'src/utils/dates'
import { getAllTags } from 'src/utils/tags'

export async function getStaticPaths() {
  const resources = await getCollection('resources')
  const articles = await getCollection('articles')
  const tags = getAllTags(resources, articles)

  return tags.map((tag) => ({
    params: { tag: tag.name.toLowerCase() },
    props: { tag: tag.name },
  }))
}

const { tag } = Astro.props

const resources = await getCollection('resources', ({ data }) => {
  return !data.draft && data.category.toLowerCase() === tag.toLowerCase()
})

const articles = await getCollection('articles', ({ data }) => {
  return !data.draft && data.category?.toLowerCase() === tag.toLowerCase()
})

const contentItems = [
  ...resources.map((item) => ({
    ...item,
    data: { ...item.data, type: 'resource' as const },
  })),
  ...articles.map((item) => ({
    ...item,
    data: { ...item.data, type: 'article' as const },
  })),
]
---

<Layout title={`${tag} | Tags`}>
  <div class='mb-8'>
    <a href='/tags' class='text-shareit-turquoise hover:text-shareit-cyan'
      >← Volver a Tags</a
    >
  </div>

  <h1 class='text-4xl font-bold mb-8 text-white'>
    Contenido en {tag}
    <span class='text-lg text-gray-400 ml-2'>({contentItems.length})</span>
  </h1>

  {
    contentItems.length > 0 ? (
      <div class='space-y-12'>
        {articles.length > 0 && (
          <section>
            <h2 class='text-2xl font-bold mb-6 text-shareit-turquoise'>
              Artículos
            </h2>
            <div class='grid grid-cols-1 md:grid-cols-2 gap-6'>
              {articles.map((article) => (
                <ResourceCard
                  date={article.data.date}
                  title={article.data.title}
                  description={article.data.description}
                  category={article.data.category}
                  href={`/articles/${article.slug}`}
                />
              ))}
            </div>
          </section>
        )}

        {resources.length > 0 && (
          <section>
            <h2 class='text-2xl font-bold mb-6 text-shareit-turquoise'>
              Recursos
            </h2>
            <div class='grid grid-cols-1 md:grid-cols-2 gap-6'>
              {resources.map((resource) => (
                <ResourceCard
                  date={resource.data.date}
                  title={resource.data.title}
                  description={resource.data.description}
                  category={resource.data.category}
                  href={`/resources/${resource.slug}`}
                />
              ))}
            </div>
          </section>
        )}
      </div>
    ) : (
      <p class='text-center text-gray-400 py-12'>
        No se encontró contenido en esta categoría.
      </p>
    )
  }
</Layout>
